
(define* (run-tdgammon-measure file opts #:key episodes thread threadio measure-tests)
  (let* ((has (lambda (x) (string-index measure-tests x)))
         (net (file-load-net file))
         (play-fun (lambda (play-type)
                     (run-tdgammon net play-type opts #:episodes (or episodes 25) #:start-episode 0 #:save #f #:thread thread #:measure #t)))
         (play-pubeval (if (has #\p) (play-fun pubeval-best-path)))
         (play-random  (if (has #\r) (play-fun #:random)))
         (play-early   (if (has #\e) (play-fun #:early)))
         (play-late    (if (has #\l) (play-fun #:late)))
         (play-bar     (if (has #\b) (play-fun #:bar)))
         (play-safe    (if (has #\s) (play-fun #:safe)))
         (totwwin 0) (totbwin 0))
    ; sum . zip
    (if (has #\p) (set! totwwin (+ totwwin (car play-pubeval))))
    (if (has #\p) (set! totbwin (+ totbwin (cadr play-pubeval))))
    (if (has #\r) (set! totwwin (+ totwwin (car play-random))))
    (if (has #\r) (set! totbwin (+ totbwin (cadr play-random))))
    (if (has #\e) (set! totwwin (+ totwwin (car play-early))))
    (if (has #\e) (set! totbwin (+ totbwin (cadr play-early))))
    (if (has #\l) (set! totwwin (+ totwwin (car play-late))))
    (if (has #\l) (set! totbwin (+ totbwin (cadr play-late))))
    (if (has #\b) (set! totwwin (+ totwwin (car play-bar))))
    (if (has #\b) (set! totbwin (+ totbwin (cadr play-bar))))
    (if (has #\s) (set! totwwin (+ totwwin (car play-safe))))
    (if (has #\s) (set! totbwin (+ totbwin (cadr play-safe))))

    (display (string-concatenate (list
             "RESULT: " (format #f "~a,~a" totwwin totbwin)
             (if (has #\p) (format #f ",~a,~a" (car play-pubeval) (cadr play-pubeval)) "")
             (if (has #\r) (format #f ",~a,~a" (car play-random) (cadr play-random)) "")
             (if (has #\e) (format #f ",~a,~a" (car play-early) (cadr play-early)) "")
             (if (has #\l) (format #f ",~a,~a" (car play-late) (cadr play-late)) "")
             (if (has #\b) (format #f ",~a,~a" (car play-bar) (cadr play-bar)) "")
             (if (has #\s) (format #f ",~a,~a" (car play-safe) (cadr play-safe)) ""))))))
